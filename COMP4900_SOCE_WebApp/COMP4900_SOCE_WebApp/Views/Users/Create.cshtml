@*@model Microsoft.AspNet.Identity.EntityFramework.IdentityUser*@
@model COMP4900_SOCE_WebApp.Models.ApplicationUser

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<input type="submit" value="Back" class="btn btn-default" onclick="location.href='@Url.Action("Index", "Users")'"><br />
@if (ViewBag.PassLength != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.PassLength
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.PasswordFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } }) <div class="alert alert-info" role="alert" style="display:inline-block;">(Must be 6+ characters)</div>
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lName, "", new { @class = "text-danger" })
            </div>
        </div>

        @using (Html.BeginForm("Create", "Users"))
        {
            <div class="form-group">
                <div class="control-label col-md-2">Role Name:</div>
                <div class="col-md-10">
                    @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.RoleDropdownlist, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
